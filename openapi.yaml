openapi: 3.0.3
info:
  description: "This is the API that GMAH third-parties need to implement in order to communicate with our services."
  version: "1.0.0"
  title: "GiveMeAHotel.com third-party integration API"
  contact:
    email: "loic@arise.travel"
servers:
  - url: "http://localhost:8080/"
    description: "Local development server"
paths:
  /availabilities:
    get:
      tags:
      - Availability
      summary: Get available rooms for a given query
      parameters:
      - name: hotel_id
        in: query
        description: Comma separated list of Hotel GMAH's ID
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Hotel/properties/partner_ref'
      - name: check_in
        in: query
        description: Check-in date (YYYY-MM-DD)
        required: true
        schema:
          type: string
          format: date
      - name: check_out
        in: query
        description: Check-out date (YYYY-MM-DD)
        required: true
        schema:
          type: string
          format: date
      - name: adults
        in: query
        description: Number of adults
        required: true
        schema:
          type: integer
          minimum: 1
      - name: children
        in: query
        description: Comma separated list of children ages, if any
        required: false
        schema:
          type: array
          items:
            type: integer
            minimum: 0
            maximum: 17
      responses:
        200:
          description: List of available rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    hotel:
                      $ref: '#/components/schemas/Hotel'
                    rooms:
                      type: array
                      items:
                        $ref: '#/components/schemas/RoomType'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /booking:
    post:
      tags:
      - Booking
      summary: Submits a new booking
      requestBody:
        description: Breakdown of the booking request
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hotel_partner_ref:
                  $ref: '#/components/schemas/Hotel/properties/partner_ref'
                room_type_partner_ref:
                  $ref: '#/components/schemas/RoomType/properties/partner_ref'
                primary_contact:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    address_lines:
                      type: array
                      items:
                        type: string
                  required:
                  - first_name
                  - last_name
                adults:
                  type: integer
                  minimum: 1
                children:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 17
                price:
                  $ref: '#/components/schemas/Price'
      responses:
        200:
          description: Reservation receipt from the partner system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
components:
  schemas:
    Hotel:
      type: object
      properties:
        id:
          type: string
          description: "The identifier of the hotel on GMAH"
        partner_ref:
          type: string
          description: "The identifier used to reference the hotel on the partner systems"
        name:
          type: string
        url:
          type: string
          format: url
        photos:
          type: array
          items:
            type: string
            format: url
        country:
          type: string
          format: '^[A-Z]{2}'
      required:
        - id
        - partner_ref
        - name
    RoomType:
      type: object
      properties:
        partner_ref:
          description: "The identifier used to reference the room type on the partner systems"
          type: string
        room_name:
          type: string
        description:
          type: string
        photos:
          type: array
          items:
            type: string
            format: url
        price:
          $ref: '#/components/schemas/Price'
      required:
        - room_name
        - description
    Price:
      type: object
      properties:
        currency:
          type: string
          enum: [EUR, USD, GBP, PLN]
        amount:
          type: number
          format: float
          minimum: 0
      required:
        - currency
        - amount
    Reservation:
      type: object
      properties:
        partner_ref:
          type: string
          description: "The identifier used to reference the reservation on the partner systems"
        hotel:
          $ref: '#/components/schemas/Hotel'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        traveler:
          type: object
          properties:
            first_name:
              type: string
            last_name:
              type: string
            phone:
              type: string
            email:
              type: string
          required:
            - first_name
    UnexpectedError:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    ValidationError:
      allOf:
      - $ref: '#/components/schemas/UnexpectedError'
      - type: object
        properties:
          validation:
            type: object
            properties:
              path:
                type: string
                description: Path of the JSON request that failed validation
              errors:
                type: array
                items:
                  type: string
            required:
            - errors
